on:
  push:
    branches: [ main ]
    tags:
      - v*

name: CI

jobs:

  dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v1
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Cache pnpm modules
        id: pnpm-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.pnpm-store
            **/node_modules
          key: ${{ runner.os }}-npm-cache-3-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-3-

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: true

#      - uses: actions/cache@v2
#        with:
#          path: '**/node_modules'
#          key: ${{ runner.os }}-modules-${{ hashFiles('../pnpm-lock.yaml') }}
#
#      - name: pnpm install
#        run: pnpm install

  coverage:
    needs: dependencies
    name: Code Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lib

    steps:
      - uses: actions/checkout@v1
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: start rabbitmq server
        run: docker-compose up -d

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Cache pnpm modules
        id: pnpm-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.pnpm-store
            **/node_modules
          key: ${{ runner.os }}-npm-cache-3-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-3-

      - name: run coverage
        run: npm run test:coverage

      - run: CODACY_PROJECT_TOKEN=${{ secrets.CODACY_PROJECT_TOKEN }} bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage/lcov.info

  analyze:
    needs: coverage
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
        # Learn more:
        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Cache pnpm modules
        id: pnpm-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.pnpm-store
            **/node_modules
          key: ${{ runner.os }}-npm-cache-3-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-3-

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  generate-docs:
    needs: dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Cache pnpm modules
        id: pnpm-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.pnpm-store
            **/node_modules
          key: ${{ runner.os }}-npm-cache-3-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-3-

      - name: Purge previous docs
        run: rm -rf docs

      - name: generate docs
        run: npm run docs

      - uses: EndBug/add-and-commit@v7 # You can change this to use a specific version.
        with:
          # The arguments for the `git add` command (see the paragraph below for more info)
          # Default: '.'
          add: 'docs --force'
          branch: docs
          # The name of the user that will be displayed as the author of the commit.
          # Default: depends on the default_author input
          author_name: cicd

          # The email of the user that will be displayed as the author of the commit.
          # Default: depends on the default_author input
          author_email: support@nestjs.pro

          # The name of the custom committer you want to use, if different from the author of the commit.
          # Default: the name of the author (set with either author_name or default_author)
          committer_name: Matthew Davis

          # The email of the custom committer you want to use, if different from the author of the commit.
          # Default: the email of the author (set with either author_email or default_author)
          committer_email: matthew@matthewdavis.io

          # Determines the way the action fills missing author name and email. Three options are available:
          # - github_actor -> UserName <UserName@users.noreply.github.com>
          # - user_info -> Your Display Name <your-actual@email.com>
          # - github_actions -> github-actions <email associated with the github logo>
          # Default: github_actor
          default_author: github_actor

          # The message for the commit.
          # Default: 'Commit from GitHub Actions (name of the workflow)'
          message: 'Generated updated documentation for https://amqp.nestjs.pro.'

          # The way the action should handle pathspec errors from the add and remove commands. Three options are available:
          # - ignore -> errors will be logged but the step won't fail
          # - exitImmediately -> the action will stop right away, and the step will fail
          # - exitAtEnd -> the action will go on, every pathspec error will be logged at the end, the step will fail.
          # Default: ignore
          pathspec_error_handling: ignore

          # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
          # Default: true
          push: true
          pull: 'NO-PULL'
          signoff: true


  release:
    needs:
      - analyze
      - coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lib
    steps:

      - name: Cache pnpm modules
        id: pnpm-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.pnpm-store
            **/node_modules
          key: ${{ runner.os }}-npm-cache-3-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-3-

#      - name: Create Release
#        if: startsWith(github.ref, 'refs/tags/v')
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          body: |
#            First release
#          draft: false
#          prerelease: false

      - name: Build
        run: npm run build

      - name: npm publish
        if: startsWith(github.ref, 'refs/tags/v')
        id: publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}

      - if: steps.publish.outputs.type != 'none'
        run: |
          echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"
