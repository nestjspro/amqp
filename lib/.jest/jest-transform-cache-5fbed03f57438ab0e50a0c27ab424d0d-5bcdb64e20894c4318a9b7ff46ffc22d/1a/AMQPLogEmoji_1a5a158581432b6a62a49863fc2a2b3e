9c72c30b1bcac7f0d578ca1cb462c151
"use strict";

/* istanbul ignore next */
function cov_2n1dk11rau() {
  var path = "/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/logging/AMQPLogEmoji.ts";
  var hash = "2745b5440917e194920eb726cbd733639d5939ee";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/logging/AMQPLogEmoji.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "3": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 43
        }
      },
      "4": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 49
        }
      },
      "5": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 43
        }
      },
      "6": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 40
        }
      },
      "7": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 41
        }
      },
      "8": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 41
        }
      },
      "9": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 1
          },
          end: {
            line: 5,
            column: 2
          }
        },
        loc: {
          start: {
            line: 5,
            column: 25
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 5
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 13,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 13,
            column: 38
          }
        }, {
          start: {
            line: 13,
            column: 43
          },
          end: {
            line: 13,
            column: 68
          }
        }],
        line: 13
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/logging/AMQPLogEmoji.ts",
      mappings: ";;;AAAA,IAAY,YAUX;AAVD,WAAY,YAAY;IAEpB,sCAAY,CAAA;IACZ,4CAAkB,CAAA;IAClB,sCAAiB,CAAA;IACjB,mCAAc,CAAA;IACd,oCAAe,CAAA;IACf,oCAAU,CAAA;IACV,qCAAW,CAAA;AAEf,CAAC,EAVW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAUvB",
      names: [],
      sources: ["/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/logging/AMQPLogEmoji.ts"],
      sourcesContent: ["export enum AMQPLogEmoji {\n\n    INBOX = '\uD83D\uDCE5',\n    CONNECTION = '\uD83C\uDFAC ',\n    DISCONNECT = '\u2716 ',\n    SUCCESS = '\u2705 ',\n    SETTINGS = '\u2699 ',\n    NEW = '\uD83D\uDEEB',\n    DOWN = '\uD83D\uDC8C'\n\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2745b5440917e194920eb726cbd733639d5939ee"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2n1dk11rau = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2n1dk11rau();
cov_2n1dk11rau().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2n1dk11rau().s[1]++;
exports.AMQPLogEmoji = void 0;
var AMQPLogEmoji;

/* istanbul ignore next */
cov_2n1dk11rau().s[2]++;

(function (AMQPLogEmoji) {
  /* istanbul ignore next */
  cov_2n1dk11rau().f[0]++;
  cov_2n1dk11rau().s[3]++;
  AMQPLogEmoji["INBOX"] = "\uD83D\uDCE5";

  /* istanbul ignore next */
  cov_2n1dk11rau().s[4]++;
  AMQPLogEmoji["CONNECTION"] = "\uD83C\uDFAC ";

  /* istanbul ignore next */
  cov_2n1dk11rau().s[5]++;
  AMQPLogEmoji["DISCONNECT"] = "\u2716 ";

  /* istanbul ignore next */
  cov_2n1dk11rau().s[6]++;
  AMQPLogEmoji["SUCCESS"] = "\u2705 ";

  /* istanbul ignore next */
  cov_2n1dk11rau().s[7]++;
  AMQPLogEmoji["SETTINGS"] = "\u2699 ";

  /* istanbul ignore next */
  cov_2n1dk11rau().s[8]++;
  AMQPLogEmoji["NEW"] = "\uD83D\uDEEB";

  /* istanbul ignore next */
  cov_2n1dk11rau().s[9]++;
  AMQPLogEmoji["DOWN"] = "\uD83D\uDC8C";
})(AMQPLogEmoji =
/* istanbul ignore next */
(cov_2n1dk11rau().b[0][0]++, exports.AMQPLogEmoji) ||
/* istanbul ignore next */
(cov_2n1dk11rau().b[0][1]++, exports.AMQPLogEmoji = {}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXR0aGV3ZGF2aXMvd29ya3NwYWNlL25lc3Rqc3Byby9tb2R1bGVzL2FtcXAvbGliL3NyYy9sb2dnaW5nL0FNUVBMb2dFbW9qaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQVksWUFBWjs7Ozs7QUFBQSxDQUFBLFVBQVksWUFBWixFQUF3QjtBQUFBO0FBQUE7QUFBQTtBQUVwQixFQUFBLFlBQUEsQ0FBQSxPQUFBLENBQUEsR0FBQSxjQUFBOztBQUZvQjtBQUFBO0FBR3BCLEVBQUEsWUFBQSxDQUFBLFlBQUEsQ0FBQSxHQUFBLGVBQUE7O0FBSG9CO0FBQUE7QUFJcEIsRUFBQSxZQUFBLENBQUEsWUFBQSxDQUFBLEdBQUEsU0FBQTs7QUFKb0I7QUFBQTtBQUtwQixFQUFBLFlBQUEsQ0FBQSxTQUFBLENBQUEsR0FBQSxTQUFBOztBQUxvQjtBQUFBO0FBTXBCLEVBQUEsWUFBQSxDQUFBLFVBQUEsQ0FBQSxHQUFBLFNBQUE7O0FBTm9CO0FBQUE7QUFPcEIsRUFBQSxZQUFBLENBQUEsS0FBQSxDQUFBLEdBQUEsY0FBQTs7QUFQb0I7QUFBQTtBQVFwQixFQUFBLFlBQUEsQ0FBQSxNQUFBLENBQUEsR0FBQSxjQUFBO0FBRUgsQ0FWRCxFQUFZLFlBQVk7QUFBWjtBQUFBLDZCQUFBLE9BQUEsQ0FBQSxZQUFBO0FBQUE7QUFBQSw2QkFBQSxPQUFBLENBQUEsWUFBQSxHQUFZLEVBQVosQ0FBWiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBlbnVtIEFNUVBMb2dFbW9qaSB7XG5cbiAgICBJTkJPWCA9ICfwn5OlJyxcbiAgICBDT05ORUNUSU9OID0gJ/CfjqwgJyxcbiAgICBESVNDT05ORUNUID0gJ+KcliAnLFxuICAgIFNVQ0NFU1MgPSAn4pyFICcsXG4gICAgU0VUVElOR1MgPSAn4pqZICcsXG4gICAgTkVXID0gJ/Cfm6snLFxuICAgIERPV04gPSAn8J+SjCdcblxufVxuIl19