c07737115c87c02fc0c36178cb4811fd
"use strict";

/* istanbul ignore next */
function cov_111vz3dfue() {
  var path = "/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/queueing/AMQPSubscriber.ts";
  var hash = "d7ff02842db87198a68e9a59781811ed64b6e694";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/queueing/AMQPSubscriber.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/queueing/AMQPSubscriber.ts",
      mappings: "",
      names: [],
      sources: ["/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/queueing/AMQPSubscriber.ts"],
      sourcesContent: ["export interface AMQPSubscriber {\n\n    queue: string;\n    noAck?: boolean;\n\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d7ff02842db87198a68e9a59781811ed64b6e694"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_111vz3dfue = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_111vz3dfue();
cov_111vz3dfue().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiJ9