256ff3d62450ea3c10e125ac2943acdf
"use strict";

/* istanbul ignore next */
function cov_5y1meuwsu() {
  var path = "/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/exceptions/AMQPConnectionNotFoundException.ts";
  var hash = "30b94152649032d52f032aa524529d4506926efe";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/exceptions/AMQPConnectionNotFoundException.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 49
        }
      },
      "2": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 23
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 54
        }
      },
      "4": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 74
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 25
          },
          end: {
            line: 8,
            column: 5
          }
        },
        line: 5
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/exceptions/AMQPConnectionNotFoundException.ts",
      mappings: ";;;AAAA,MAAa,+BAAgC,SAAQ,KAAK;IAEtD,YAAmB,OAAgB;QAE/B,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,IAAI,CAAC,IAAI,GAAG,iCAAiC,CAAC;IAElD,CAAC;CAEJ;AAVD,0EAUC",
      names: [],
      sources: ["/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/exceptions/AMQPConnectionNotFoundException.ts"],
      sourcesContent: ["export class AMQPConnectionNotFoundException extends Error {\n\n    public constructor(message?: string) {\n\n        super(message);\n\n        this.name = 'AMQPConnectionNotFoundException';\n\n    }\n\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "30b94152649032d52f032aa524529d4506926efe"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_5y1meuwsu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_5y1meuwsu();
cov_5y1meuwsu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_5y1meuwsu().s[1]++;
exports.AMQPConnectionNotFoundException = void 0;

class AMQPConnectionNotFoundException extends Error {
  constructor(message) {
    /* istanbul ignore next */
    cov_5y1meuwsu().f[0]++;
    cov_5y1meuwsu().s[2]++;
    super(message);

    /* istanbul ignore next */
    cov_5y1meuwsu().s[3]++;
    this.name = 'AMQPConnectionNotFoundException';
  }

}

/* istanbul ignore next */
cov_5y1meuwsu().s[4]++;
exports.AMQPConnectionNotFoundException = AMQPConnectionNotFoundException;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXR0aGV3ZGF2aXMvd29ya3NwYWNlL25lc3Rqc3Byby9tb2R1bGVzL2FtcXAvbGliL3NyYy9leGNlcHRpb25zL0FNUVBDb25uZWN0aW9uTm90Rm91bmRFeGNlcHRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxNQUFhLCtCQUFiLFNBQXFELEtBQXJELENBQTBEO0FBRXRELEVBQUEsV0FBQSxDQUFtQixPQUFuQixFQUFtQztBQUFBO0FBQUE7QUFBQTtBQUUvQixVQUFNLE9BQU47O0FBRitCO0FBQUE7QUFJL0IsU0FBSyxJQUFMLEdBQVksaUNBQVo7QUFFSDs7QUFScUQ7Ozs7QUFBMUQsT0FBQSxDQUFBLCtCQUFBLEdBQUEsK0JBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQU1RUENvbm5lY3Rpb25Ob3RGb3VuZEV4Y2VwdGlvbiBleHRlbmRzIEVycm9yIHtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihtZXNzYWdlPzogc3RyaW5nKSB7XG5cbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG5cbiAgICAgICAgdGhpcy5uYW1lID0gJ0FNUVBDb25uZWN0aW9uTm90Rm91bmRFeGNlcHRpb24nO1xuXG4gICAgfVxuXG59XG4iXX0=