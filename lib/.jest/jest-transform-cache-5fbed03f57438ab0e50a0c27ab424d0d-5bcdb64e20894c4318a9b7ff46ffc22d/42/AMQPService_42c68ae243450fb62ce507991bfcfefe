a74c2e28eba32532f06697780ec29e27
"use strict";

/* istanbul ignore next */
function cov_p0czg0ccv() {
  var path = "/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/AMQPService.ts";
  var hash = "df7ae40f75550a08937daec9a7cbe751cf0d921a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/AMQPService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "14": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 73
        }
      },
      "15": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "16": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "17": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 29
        }
      },
      "18": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "19": {
        start: {
          line: 17,
          column: 25
        },
        end: {
          line: 17,
          column: 52
        }
      },
      "20": {
        start: {
          line: 18,
          column: 42
        },
        end: {
          line: 18,
          column: 97
        }
      },
      "21": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "22": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 52
        }
      },
      "23": {
        start: {
          line: 21,
          column: 14
        },
        end: {
          line: 21,
          column: 30
        }
      },
      "24": {
        start: {
          line: 22,
          column: 23
        },
        end: {
          line: 22,
          column: 56
        }
      },
      "25": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 88,
          column: 1
        }
      },
      "26": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 29
        }
      },
      "27": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 30
        }
      },
      "28": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 29
        }
      },
      "29": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 36
        }
      },
      "30": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "31": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 104
        }
      },
      "32": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "33": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 36,
          column: 13
        }
      },
      "34": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 34,
          column: 26
        }
      },
      "35": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 63
        }
      },
      "36": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 41,
          column: 13
        }
      },
      "37": {
        start: {
          line: 39,
          column: 25
        },
        end: {
          line: 39,
          column: 26
        }
      },
      "38": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 46
        }
      },
      "39": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "40": {
        start: {
          line: 45,
          column: 21
        },
        end: {
          line: 45,
          column: 22
        }
      },
      "41": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 221
        }
      },
      "42": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 45
        }
      },
      "43": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 128
        }
      },
      "44": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 95
        }
      },
      "45": {
        start: {
          line: 52,
          column: 71
        },
        end: {
          line: 52,
          column: 92
        }
      },
      "46": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 174
        }
      },
      "47": {
        start: {
          line: 56,
          column: 27
        },
        end: {
          line: 56,
          column: 83
        }
      },
      "48": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 42
        }
      },
      "49": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 26
        }
      },
      "50": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 154
        }
      },
      "51": {
        start: {
          line: 62,
          column: 25
        },
        end: {
          line: 62,
          column: 51
        }
      },
      "52": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "53": {
        start: {
          line: 64,
          column: 31
        },
        end: {
          line: 64,
          column: 99
        }
      },
      "54": {
        start: {
          line: 64,
          column: 67
        },
        end: {
          line: 64,
          column: 98
        }
      },
      "55": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "56": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 163
        }
      },
      "57": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 42
        }
      },
      "58": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 164
        }
      },
      "59": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "60": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 143
        }
      },
      "61": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 51
        }
      },
      "62": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 121
        }
      },
      "63": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 24
        }
      },
      "64": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 148
        }
      },
      "65": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 26
        }
      },
      "66": {
        start: {
          line: 89,
          column: 0
        },
        end: {
          line: 93,
          column: 16
        }
      },
      "67": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 94,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 11,
            column: 41
          }
        },
        loc: {
          start: {
            line: 11,
            column: 73
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 12
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 73
          }
        },
        line: 12
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 32
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 14
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 31
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 44
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 15
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 52,
            column: 57
          },
          end: {
            line: 52,
            column: 58
          }
        },
        loc: {
          start: {
            line: 52,
            column: 71
          },
          end: {
            line: 52,
            column: 92
          }
        },
        line: 52
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 26
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 54
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 60
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 64,
            column: 53
          },
          end: {
            line: 64,
            column: 54
          }
        },
        loc: {
          start: {
            line: 64,
            column: 67
          },
          end: {
            line: 64,
            column: 98
          }
        },
        line: 64
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 22
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 84
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "13": {
        loc: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 19
          }
        }, {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 35
          }
        }, {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "14": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: 38,
            column: 13
          },
          end: {
            line: 42,
            column: 9
          }
        }],
        line: 33
      },
      "15": {
        loc: {
          start: {
            line: 46,
            column: 84
          },
          end: {
            line: 46,
            column: 156
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 118
          },
          end: {
            line: 46,
            column: 149
          }
        }, {
          start: {
            line: 46,
            column: 152
          },
          end: {
            line: 46,
            column: 156
          }
        }],
        line: 46
      },
      "16": {
        loc: {
          start: {
            line: 55,
            column: 84
          },
          end: {
            line: 55,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 98
          },
          end: {
            line: 55,
            column: 109
          }
        }, {
          start: {
            line: 55,
            column: 112
          },
          end: {
            line: 55,
            column: 116
          }
        }],
        line: 55
      },
      "17": {
        loc: {
          start: {
            line: 61,
            column: 78
          },
          end: {
            line: 61,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 61,
            column: 85
          },
          end: {
            line: 61,
            column: 89
          }
        }, {
          start: {
            line: 61,
            column: 92
          },
          end: {
            line: 61,
            column: 96
          }
        }],
        line: 61
      },
      "18": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: 73,
            column: 13
          },
          end: {
            line: 81,
            column: 9
          }
        }],
        line: 63
      },
      "19": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        }, {
          start: {
            line: 69,
            column: 17
          },
          end: {
            line: 71,
            column: 13
          }
        }],
        line: 65
      },
      "20": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        }, {
          start: {
            line: 78,
            column: 17
          },
          end: {
            line: 80,
            column: 13
          }
        }],
        line: 74
      },
      "21": {
        loc: {
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 74,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 74,
            column: 32
          }
        }, {
          start: {
            line: 74,
            column: 36
          },
          end: {
            line: 74,
            column: 63
          }
        }],
        line: 74
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/AMQPService.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/AMQPService.ts"],
      sourcesContent: ["import { Injectable, Inject, OnModuleDestroy } from '@nestjs/common';\nimport { AMQPConnection } from './AMQPConnection';\nimport { AMQPConfig } from './configuration/AMQPConfig';\nimport { AMQPConnectionNotFoundException } from './exceptions/AMQPConnectionNotFoundException';\nimport { ReplaySubject, forkJoin, Observable } from 'rxjs';\nimport { AMQPLogger } from './logging/AMQPLogger';\nimport * as chalk from 'chalk';\nimport { AMQPConfigConnection } from './configuration/AMQPConfigConnection';\nimport { AMQPLogEmoji } from './logging/AMQPLogEmoji';\n\n@Injectable()\nexport class AMQPService implements OnModuleDestroy {\n\n    public config: AMQPConfig;\n\n    private connections: Array<AMQPConnection> = [];\n\n    public constructor(@Inject('AMQP_CONFIG') config: AMQPConfig, private readonly logger: AMQPLogger) {\n\n        this.config = config;\n        this.logger.config = config;\n\n        this.connect();\n\n    }\n\n    public connect() {\n\n        this.logger.debug('Creating connections..', AMQPLogEmoji.NEW, 'SERVICE MANAGER');\n\n        if (this.connections.length === 0) {\n\n            for (let i = 0; i < this.config.connections.length; i++) {\n\n                this.addConnection(this.config.connections[ i ]);\n\n            }\n\n        } else {\n\n            for (let i = 0; i < this.connections.length; i++) {\n\n                this.connections[ i ].connect();\n\n            }\n\n        }\n\n    }\n\n    public disconnect(): void {\n\n        for (let i = 0; i < this.connections.length; i++) {\n\n            this.logger.debug(`Disconnecting from amqp server \"${ chalk.yellowBright(this.connections[ i ].config.name ? this.connections[ i ].config.name : '#0') }\"`, AMQPLogEmoji.DISCONNECT, 'SERVICE MANAGER');\n\n            this.connections[ i ].disconnect();\n\n        }\n\n        this.logger.debug('All connections have been disconnected!', AMQPLogEmoji.DISCONNECT, 'SERVICE MANAGER');\n\n    }\n\n    public tearDown(): Observable<Array<unknown>> {\n\n        return forkJoin(this.connections.map(connection => connection.tearDown()));\n\n    }\n\n    public addConnection(config: AMQPConfigConnection): AMQPConnection {\n\n        this.logger.debug(`Creating connection to amqp server \"${ chalk.yellowBright(config.name ? config.name : '#0') }\"`, AMQPLogEmoji.NEW, 'SERVICE MANAGER');\n\n        const connection = new AMQPConnection(config, this.logger);\n\n        this.connections.push(connection);\n\n        return connection;\n\n    }\n\n    public getConnection(name?: string): ReplaySubject<AMQPConnection> {\n\n        this.logger.trace(`Attempting to get connection \"${ chalk.yellowBright(name ? name : '#0') }\"`, AMQPLogEmoji.NEW, 'SERVICE MANAGER');\n\n        const subject$: ReplaySubject<AMQPConnection> = new ReplaySubject();\n\n        if (name) {\n\n            const connection = this.connections.find(connection => connection.config.name === name);\n\n            if (connection) {\n\n                this.logger.trace(`Retrieved connection \"${ chalk.yellowBright(connection.config.name) }\"!`, AMQPLogEmoji.SUCCESS, 'SERVICE MANAGER');\n\n                subject$.next(connection);\n\n            } else {\n\n                throw new AMQPConnectionNotFoundException(`There is no existing connection named \"${ chalk.yellowBright(name) }\".`);\n\n            }\n\n        } else {\n\n            if (this.connections && this.connections.length > 0) {\n\n                this.logger.trace(`Retrieved connection ${ chalk.yellowBright('#0!') }`, AMQPLogEmoji.SUCCESS, 'SERVICE MANAGER');\n\n                subject$.next(this.connections[ 0 ]);\n\n            } else {\n\n                throw new AMQPConnectionNotFoundException('There are no connections.');\n\n            }\n\n        }\n\n        return subject$;\n\n    }\n\n    public onModuleDestroy(): void {\n\n        this.logger.debug(chalk.magentaBright('Received shutdown signal, shutting down..'), AMQPLogEmoji.SUCCESS, 'SERVICE MANAGER');\n\n        this.disconnect();\n\n    }\n\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "df7ae40f75550a08937daec9a7cbe751cf0d921a"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_p0czg0ccv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_p0czg0ccv();

var __decorate =
/* istanbul ignore next */
(cov_p0czg0ccv().s[0]++,
/* istanbul ignore next */
(cov_p0czg0ccv().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_p0czg0ccv().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_p0czg0ccv().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_p0czg0ccv().f[0]++;
  var c =
  /* istanbul ignore next */
  (cov_p0czg0ccv().s[1]++, arguments.length),
      r =
  /* istanbul ignore next */
  (cov_p0czg0ccv().s[2]++, c < 3 ?
  /* istanbul ignore next */
  (cov_p0czg0ccv().b[1][0]++, target) :
  /* istanbul ignore next */
  (cov_p0czg0ccv().b[1][1]++, desc === null ?
  /* istanbul ignore next */
  (cov_p0czg0ccv().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
  /* istanbul ignore next */
  (cov_p0czg0ccv().b[2][1]++, desc))),
      d;

  /* istanbul ignore next */
  cov_p0czg0ccv().s[3]++;

  if (
  /* istanbul ignore next */
  (cov_p0czg0ccv().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_p0czg0ccv().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_p0czg0ccv().b[3][0]++;
    cov_p0czg0ccv().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_p0czg0ccv().b[3][1]++;
    cov_p0czg0ccv().s[5]++;

    for (var i =
    /* istanbul ignore next */
    (cov_p0czg0ccv().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_p0czg0ccv().s[7]++;

      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_p0czg0ccv().b[5][0]++;
        cov_p0czg0ccv().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_p0czg0ccv().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_p0czg0ccv().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_p0czg0ccv().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_p0czg0ccv().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_p0czg0ccv().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_p0czg0ccv().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_p0czg0ccv().b[5][1]++;
      }
    }
  }

  /* istanbul ignore next */
  cov_p0czg0ccv().s[9]++;
  return (
    /* istanbul ignore next */
    (cov_p0czg0ccv().b[9][0]++, c > 3) &&
    /* istanbul ignore next */
    (cov_p0czg0ccv().b[9][1]++, r) &&
    /* istanbul ignore next */
    (cov_p0czg0ccv().b[9][2]++, Object.defineProperty(target, key, r)), r
  );
}));

var __metadata =
/* istanbul ignore next */
(cov_p0czg0ccv().s[10]++,
/* istanbul ignore next */
(cov_p0czg0ccv().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_p0czg0ccv().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_p0czg0ccv().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_p0czg0ccv().f[1]++;
  cov_p0czg0ccv().s[11]++;

  if (
  /* istanbul ignore next */
  (cov_p0czg0ccv().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_p0czg0ccv().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_p0czg0ccv().b[11][0]++;
    cov_p0czg0ccv().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_p0czg0ccv().b[11][1]++;
  }
}));

var __param =
/* istanbul ignore next */
(cov_p0czg0ccv().s[13]++,
/* istanbul ignore next */
(cov_p0czg0ccv().b[13][0]++, this) &&
/* istanbul ignore next */
(cov_p0czg0ccv().b[13][1]++, this.__param) ||
/* istanbul ignore next */
(cov_p0czg0ccv().b[13][2]++, function (paramIndex, decorator) {
  /* istanbul ignore next */
  cov_p0czg0ccv().f[2]++;
  cov_p0czg0ccv().s[14]++;
  return function (target, key) {
    /* istanbul ignore next */
    cov_p0czg0ccv().f[3]++;
    cov_p0czg0ccv().s[15]++;
    decorator(target, key, paramIndex);
  };
}));

/* istanbul ignore next */
cov_p0czg0ccv().s[16]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_p0czg0ccv().s[17]++;
exports.AMQPService = void 0;
const common_1 =
/* istanbul ignore next */
(cov_p0czg0ccv().s[18]++, require("@nestjs/common"));
const AMQPConnection_1 =
/* istanbul ignore next */
(cov_p0czg0ccv().s[19]++, require("./AMQPConnection"));
const AMQPConnectionNotFoundException_1 =
/* istanbul ignore next */
(cov_p0czg0ccv().s[20]++, require("./exceptions/AMQPConnectionNotFoundException"));
const rxjs_1 =
/* istanbul ignore next */
(cov_p0czg0ccv().s[21]++, require("rxjs"));
const AMQPLogger_1 =
/* istanbul ignore next */
(cov_p0czg0ccv().s[22]++, require("./logging/AMQPLogger"));
const chalk =
/* istanbul ignore next */
(cov_p0czg0ccv().s[23]++, require("chalk"));
const AMQPLogEmoji_1 =
/* istanbul ignore next */
(cov_p0czg0ccv().s[24]++, require("./logging/AMQPLogEmoji"));

/* istanbul ignore next */
cov_p0czg0ccv().s[25]++;
let AMQPService = class AMQPService {
  constructor(config, logger) {
    /* istanbul ignore next */
    cov_p0czg0ccv().f[4]++;
    cov_p0czg0ccv().s[26]++;
    this.logger = logger;

    /* istanbul ignore next */
    cov_p0czg0ccv().s[27]++;
    this.connections = [];

    /* istanbul ignore next */
    cov_p0czg0ccv().s[28]++;
    this.config = config;

    /* istanbul ignore next */
    cov_p0czg0ccv().s[29]++;
    this.logger.config = config;

    /* istanbul ignore next */
    cov_p0czg0ccv().s[30]++;
    this.connect();
  }

  connect() {
    /* istanbul ignore next */
    cov_p0czg0ccv().f[5]++;
    cov_p0czg0ccv().s[31]++;
    this.logger.debug('Creating connections..', AMQPLogEmoji_1.AMQPLogEmoji.NEW, 'SERVICE MANAGER');

    /* istanbul ignore next */
    cov_p0czg0ccv().s[32]++;

    if (this.connections.length === 0) {
      /* istanbul ignore next */
      cov_p0czg0ccv().b[14][0]++;
      cov_p0czg0ccv().s[33]++;

      for (let i =
      /* istanbul ignore next */
      (cov_p0czg0ccv().s[34]++, 0); i < this.config.connections.length; i++) {
        /* istanbul ignore next */
        cov_p0czg0ccv().s[35]++;
        this.addConnection(this.config.connections[i]);
      }
    } else {
      /* istanbul ignore next */
      cov_p0czg0ccv().b[14][1]++;
      cov_p0czg0ccv().s[36]++;

      for (let i =
      /* istanbul ignore next */
      (cov_p0czg0ccv().s[37]++, 0); i < this.connections.length; i++) {
        /* istanbul ignore next */
        cov_p0czg0ccv().s[38]++;
        this.connections[i].connect();
      }
    }
  }

  disconnect() {
    /* istanbul ignore next */
    cov_p0czg0ccv().f[6]++;
    cov_p0czg0ccv().s[39]++;

    for (let i =
    /* istanbul ignore next */
    (cov_p0czg0ccv().s[40]++, 0); i < this.connections.length; i++) {
      /* istanbul ignore next */
      cov_p0czg0ccv().s[41]++;
      this.logger.debug(`Disconnecting from amqp server "${chalk.yellowBright(this.connections[i].config.name ?
      /* istanbul ignore next */
      (cov_p0czg0ccv().b[15][0]++, this.connections[i].config.name) :
      /* istanbul ignore next */
      (cov_p0czg0ccv().b[15][1]++, '#0'))}"`, AMQPLogEmoji_1.AMQPLogEmoji.DISCONNECT, 'SERVICE MANAGER');

      /* istanbul ignore next */
      cov_p0czg0ccv().s[42]++;
      this.connections[i].disconnect();
    }

    /* istanbul ignore next */
    cov_p0czg0ccv().s[43]++;
    this.logger.debug('All connections have been disconnected!', AMQPLogEmoji_1.AMQPLogEmoji.DISCONNECT, 'SERVICE MANAGER');
  }

  tearDown() {
    /* istanbul ignore next */
    cov_p0czg0ccv().f[7]++;
    cov_p0czg0ccv().s[44]++;
    return (0, rxjs_1.forkJoin)(this.connections.map((connection) => {
      /* istanbul ignore next */
      cov_p0czg0ccv().f[8]++;
      cov_p0czg0ccv().s[45]++;
      return connection.tearDown();
    }));
  }

  addConnection(config) {
    /* istanbul ignore next */
    cov_p0czg0ccv().f[9]++;
    cov_p0czg0ccv().s[46]++;
    this.logger.debug(`Creating connection to amqp server "${chalk.yellowBright(config.name ?
    /* istanbul ignore next */
    (cov_p0czg0ccv().b[16][0]++, config.name) :
    /* istanbul ignore next */
    (cov_p0czg0ccv().b[16][1]++, '#0'))}"`, AMQPLogEmoji_1.AMQPLogEmoji.NEW, 'SERVICE MANAGER');
    const connection =
    /* istanbul ignore next */
    (cov_p0czg0ccv().s[47]++, new AMQPConnection_1.AMQPConnection(config, this.logger));

    /* istanbul ignore next */
    cov_p0czg0ccv().s[48]++;
    this.connections.push(connection);

    /* istanbul ignore next */
    cov_p0czg0ccv().s[49]++;
    return connection;
  }

  getConnection(name) {
    /* istanbul ignore next */
    cov_p0czg0ccv().f[10]++;
    cov_p0czg0ccv().s[50]++;
    this.logger.trace(`Attempting to get connection "${chalk.yellowBright(name ?
    /* istanbul ignore next */
    (cov_p0czg0ccv().b[17][0]++, name) :
    /* istanbul ignore next */
    (cov_p0czg0ccv().b[17][1]++, '#0'))}"`, AMQPLogEmoji_1.AMQPLogEmoji.NEW, 'SERVICE MANAGER');
    const subject$ =
    /* istanbul ignore next */
    (cov_p0czg0ccv().s[51]++, new rxjs_1.ReplaySubject());

    /* istanbul ignore next */
    cov_p0czg0ccv().s[52]++;

    if (name) {
      /* istanbul ignore next */
      cov_p0czg0ccv().b[18][0]++;
      const connection =
      /* istanbul ignore next */
      (cov_p0czg0ccv().s[53]++, this.connections.find((connection) => {
        /* istanbul ignore next */
        cov_p0czg0ccv().f[11]++;
        cov_p0czg0ccv().s[54]++;
        return connection.config.name === name;
      }));

      /* istanbul ignore next */
      cov_p0czg0ccv().s[55]++;

      if (connection) {
        /* istanbul ignore next */
        cov_p0czg0ccv().b[19][0]++;
        cov_p0czg0ccv().s[56]++;
        this.logger.trace(`Retrieved connection "${chalk.yellowBright(connection.config.name)}"!`, AMQPLogEmoji_1.AMQPLogEmoji.SUCCESS, 'SERVICE MANAGER');

        /* istanbul ignore next */
        cov_p0czg0ccv().s[57]++;
        subject$.next(connection);
      } else {
        /* istanbul ignore next */
        cov_p0czg0ccv().b[19][1]++;
        cov_p0czg0ccv().s[58]++;
        throw new AMQPConnectionNotFoundException_1.AMQPConnectionNotFoundException(`There is no existing connection named "${chalk.yellowBright(name)}".`);
      }
    } else {
      /* istanbul ignore next */
      cov_p0czg0ccv().b[18][1]++;
      cov_p0czg0ccv().s[59]++;

      if (
      /* istanbul ignore next */
      (cov_p0czg0ccv().b[21][0]++, this.connections) &&
      /* istanbul ignore next */
      (cov_p0czg0ccv().b[21][1]++, this.connections.length > 0)) {
        /* istanbul ignore next */
        cov_p0czg0ccv().b[20][0]++;
        cov_p0czg0ccv().s[60]++;
        this.logger.trace(`Retrieved connection ${chalk.yellowBright('#0!')}`, AMQPLogEmoji_1.AMQPLogEmoji.SUCCESS, 'SERVICE MANAGER');

        /* istanbul ignore next */
        cov_p0czg0ccv().s[61]++;
        subject$.next(this.connections[0]);
      } else {
        /* istanbul ignore next */
        cov_p0czg0ccv().b[20][1]++;
        cov_p0czg0ccv().s[62]++;
        throw new AMQPConnectionNotFoundException_1.AMQPConnectionNotFoundException('There are no connections.');
      }
    }

    /* istanbul ignore next */
    cov_p0czg0ccv().s[63]++;
    return subject$;
  }

  onModuleDestroy() {
    /* istanbul ignore next */
    cov_p0czg0ccv().f[12]++;
    cov_p0czg0ccv().s[64]++;
    this.logger.debug(chalk.magentaBright('Received shutdown signal, shutting down..'), AMQPLogEmoji_1.AMQPLogEmoji.SUCCESS, 'SERVICE MANAGER');

    /* istanbul ignore next */
    cov_p0czg0ccv().s[65]++;
    this.disconnect();
  }

};

/* istanbul ignore next */
cov_p0czg0ccv().s[66]++;
AMQPService = __decorate([(0, common_1.Injectable)(), __param(0, (0, common_1.Inject)('AMQP_CONFIG')), __metadata("design:paramtypes", [Object, AMQPLogger_1.AMQPLogger])], AMQPService);

/* istanbul ignore next */
cov_p0czg0ccv().s[67]++;
exports.AMQPService = AMQPService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,