caf786c0ac92e2c5aba291fc83d66d3b
"use strict";

/* istanbul ignore next */
function cov_6a6m7hvv0() {
  var path = "/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/queueing/AMQPMessage.ts";
  var hash = "6271c1a02e14517496847a9213c5a96b85f82130";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/queueing/AMQPMessage.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 29
        }
      },
      "2": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "3": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 23
        }
      },
      "4": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 59
        }
      },
      "5": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 30
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/queueing/AMQPMessage.ts",
      mappings: ";;;AAEA;;GAEG;AACH,MAAa,WAAW;IAiBpB;;;;;OAKG;IACH,YAAmB,OAAuB,EAAE,GAAc;QAEtD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IAEnB,CAAC;IAED;;;;;OAKG;IACI,QAAQ;QAEX,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;IAEvD,CAAC;CAEJ;AA1CD,kCA0CC",
      names: [],
      sources: ["/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/queueing/AMQPMessage.ts"],
      sourcesContent: ["import { ConsumeMessage } from 'amqplib';\n\n/**\n * Message envelope.\n */\nexport class AMQPMessage<T> {\n\n    /**\n     * Original message envelope from the AMQP service.\n     *\n     * @type {ConsumeMessage}\n     */\n    public message: ConsumeMessage;\n\n    /**\n     * Acknowledgement method.\n     * Should be called upon receipt.\n     *\n     * @type {Function}\n     */\n    public ack?: Function;\n\n    /**\n     * Original message envelope & late acknowledgement method.\n     *\n     * @param {ConsumeMessage} message\n     * @param {Function} ack\n     */\n    public constructor(message: ConsumeMessage, ack?: Function) {\n\n        this.message = message;\n        this.ack = ack;\n\n    }\n\n    /**\n     * Deserializes the message.content buffer (string) in to an\n     * objct of type {T}.\n     *\n     * @return {T} message.content as {T}.\n     */\n    public fromJSON(): T {\n\n        return JSON.parse(this.message.content.toString());\n\n    }\n\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6271c1a02e14517496847a9213c5a96b85f82130"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6a6m7hvv0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_6a6m7hvv0();
cov_6a6m7hvv0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_6a6m7hvv0().s[1]++;
exports.AMQPMessage = void 0;
/**
 * Message envelope.
 */

class AMQPMessage {
  /**
   * Original message envelope & late acknowledgement method.
   *
   * @param {ConsumeMessage} message
   * @param {Function} ack
   */
  constructor(message, ack) {
    /* istanbul ignore next */
    cov_6a6m7hvv0().f[0]++;
    cov_6a6m7hvv0().s[2]++;
    this.message = message;

    /* istanbul ignore next */
    cov_6a6m7hvv0().s[3]++;
    this.ack = ack;
  }
  /**
   * Deserializes the message.content buffer (string) in to an
   * objct of type {T}.
   *
   * @return {T} message.content as {T}.
   */


  fromJSON() {
    /* istanbul ignore next */
    cov_6a6m7hvv0().f[1]++;
    cov_6a6m7hvv0().s[4]++;
    return JSON.parse(this.message.content.toString());
  }

}

/* istanbul ignore next */
cov_6a6m7hvv0().s[5]++;
exports.AMQPMessage = AMQPMessage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXR0aGV3ZGF2aXMvd29ya3NwYWNlL25lc3Rqc3Byby9tb2R1bGVzL2FtcXAvbGliL3NyYy9xdWV1ZWluZy9BTVFQTWVzc2FnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQStCWTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE3Qlo7O0FBRUc7O0FBQ0gsTUFBYSxXQUFiLENBQXdCO0FBaUJwQjs7Ozs7QUFLRztBQUNILEVBQUEsV0FBQSxDQUFtQixPQUFuQixFQUE0QyxHQUE1QyxFQUEwRDtBQUFBO0FBQUE7QUFBQTtBQUV0RCxTQUFLLE9BQUwsR0FBZSxPQUFmOztBQUZzRDtBQUFBO0FBR3RELFNBQUssR0FBTCxHQUFXLEdBQVg7QUFFSDtBQUVEOzs7OztBQUtHOzs7QUFDSSxFQUFBLFFBQVEsR0FBQTtBQUFBO0FBQUE7QUFBQTtBQUVYLFdBQU8sSUFBSSxDQUFDLEtBQUwsQ0FBVyxLQUFLLE9BQUwsQ0FBYSxPQUFiLENBQXFCLFFBQXJCLEVBQVgsQ0FBUDtBQUVIOztBQXhDbUI7Ozs7QUFBeEIsT0FBQSxDQUFBLFdBQUEsR0FBQSxXQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29uc3VtZU1lc3NhZ2UgfSBmcm9tICdhbXFwbGliJztcblxuLyoqXG4gKiBNZXNzYWdlIGVudmVsb3BlLlxuICovXG5leHBvcnQgY2xhc3MgQU1RUE1lc3NhZ2U8VD4ge1xuXG4gICAgLyoqXG4gICAgICogT3JpZ2luYWwgbWVzc2FnZSBlbnZlbG9wZSBmcm9tIHRoZSBBTVFQIHNlcnZpY2UuXG4gICAgICpcbiAgICAgKiBAdHlwZSB7Q29uc3VtZU1lc3NhZ2V9XG4gICAgICovXG4gICAgcHVibGljIG1lc3NhZ2U6IENvbnN1bWVNZXNzYWdlO1xuXG4gICAgLyoqXG4gICAgICogQWNrbm93bGVkZ2VtZW50IG1ldGhvZC5cbiAgICAgKiBTaG91bGQgYmUgY2FsbGVkIHVwb24gcmVjZWlwdC5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtGdW5jdGlvbn1cbiAgICAgKi9cbiAgICBwdWJsaWMgYWNrPzogRnVuY3Rpb247XG5cbiAgICAvKipcbiAgICAgKiBPcmlnaW5hbCBtZXNzYWdlIGVudmVsb3BlICYgbGF0ZSBhY2tub3dsZWRnZW1lbnQgbWV0aG9kLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtDb25zdW1lTWVzc2FnZX0gbWVzc2FnZVxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGFja1xuICAgICAqL1xuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihtZXNzYWdlOiBDb25zdW1lTWVzc2FnZSwgYWNrPzogRnVuY3Rpb24pIHtcblxuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgICAgICB0aGlzLmFjayA9IGFjaztcblxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIERlc2VyaWFsaXplcyB0aGUgbWVzc2FnZS5jb250ZW50IGJ1ZmZlciAoc3RyaW5nKSBpbiB0byBhblxuICAgICAqIG9iamN0IG9mIHR5cGUge1R9LlxuICAgICAqXG4gICAgICogQHJldHVybiB7VH0gbWVzc2FnZS5jb250ZW50IGFzIHtUfS5cbiAgICAgKi9cbiAgICBwdWJsaWMgZnJvbUpTT04oKTogVCB7XG5cbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodGhpcy5tZXNzYWdlLmNvbnRlbnQudG9TdHJpbmcoKSk7XG5cbiAgICB9XG5cbn1cbiJdfQ==