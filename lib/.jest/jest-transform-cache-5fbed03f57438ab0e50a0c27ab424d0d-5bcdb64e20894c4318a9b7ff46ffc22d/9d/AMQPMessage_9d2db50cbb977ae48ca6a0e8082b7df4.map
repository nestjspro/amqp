{"version":3,"sources":["/Users/matthewdavis/workspace/nestjspro/modules/amqp/lib/src/queueing/AMQPMessage.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BY;;;;;;;;;;;;;;;;;AA7BZ;;AAEG;;AACH,MAAa,WAAb,CAAwB;AAiBpB;;;;;AAKG;AACH,EAAA,WAAA,CAAmB,OAAnB,EAA4C,GAA5C,EAA0D;AAAA;AAAA;AAAA;AAEtD,SAAK,OAAL,GAAe,OAAf;;AAFsD;AAAA;AAGtD,SAAK,GAAL,GAAW,GAAX;AAEH;AAED;;;;;AAKG;;;AACI,EAAA,QAAQ,GAAA;AAAA;AAAA;AAAA;AAEX,WAAO,IAAI,CAAC,KAAL,CAAW,KAAK,OAAL,CAAa,OAAb,CAAqB,QAArB,EAAX,CAAP;AAEH;;AAxCmB;;;;AAAxB,OAAA,CAAA,WAAA,GAAA,WAAA","sourcesContent":["import { ConsumeMessage } from 'amqplib';\n\n/**\n * Message envelope.\n */\nexport class AMQPMessage<T> {\n\n    /**\n     * Original message envelope from the AMQP service.\n     *\n     * @type {ConsumeMessage}\n     */\n    public message: ConsumeMessage;\n\n    /**\n     * Acknowledgement method.\n     * Should be called upon receipt.\n     *\n     * @type {Function}\n     */\n    public ack?: Function;\n\n    /**\n     * Original message envelope & late acknowledgement method.\n     *\n     * @param {ConsumeMessage} message\n     * @param {Function} ack\n     */\n    public constructor(message: ConsumeMessage, ack?: Function) {\n\n        this.message = message;\n        this.ack = ack;\n\n    }\n\n    /**\n     * Deserializes the message.content buffer (string) in to an\n     * objct of type {T}.\n     *\n     * @return {T} message.content as {T}.\n     */\n    public fromJSON(): T {\n\n        return JSON.parse(this.message.content.toString());\n\n    }\n\n}\n"]}